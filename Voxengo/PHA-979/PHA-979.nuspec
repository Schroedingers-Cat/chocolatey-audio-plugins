<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>voxengo-pha-979</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>2.12</version>
    <packageSourceUrl>https://github.com/Schroedingers-Cat/chocolatey-audio-plugins</packageSourceUrl>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>Schroedingers-Cat</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>Voxengo PHA-979 (Install)</title>
    <authors>Voxengo</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://www.voxengo.com/product/pha979/</projectUrl>
    <iconUrl>https://rawcdn.githack.com/Schroedingers-Cat/chocolatey-audio-plugins/84e4652ba31753ce18f5b4a9dc6032a80afe4e73/Icons/Voxengo/pha-979.png</iconUrl>
    <copyright>2002-2022 Aleksey Vaneev</copyright>
    <!-- If there is a license Url available, it is is required for the community feed -->
    <licenseUrl>https://www.voxengo.com/terms-of-use/</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <!--<projectSourceUrl>Software Source Location - is the software FOSS somewhere? Link to it with this</projectSourceUrl>-->
    <docsUrl>https://www.voxengo.com/files/userguides/VoxengoPHA979_en.pdf/getbyname/Voxengo%20PHA-979%20User%20Guide%20en.pdf</docsUrl>
    <!--<mailingListUrl></mailingListUrl>-->
    <!--<bugTrackerUrl></bugTrackerUrl>-->
    <tags>pha-979 phase shift vst aax audio mixing mastering recording trial</tags>
    <summary>A phase shift plugin for VST2/3 and AAX compatible hosts by Voxengo.</summary>
    <description>
PHA-979 is a professional audio AU and VST plugin which allows you to apply an arbitrary phase shift to sound material.  What is meant by the phase shift here is simultaneous shifting of all frequencies across the active frequency range of the signal by the given value in degrees.  This is achieved by linear-phase design.

## Package Specific

### Package Parameters
The following package parameters can be set:

 * `/NoVst2x86`       - Do not install the x86 VST2 version
 * `/NoVst2x64`       - Do not install the x64 VST2 version
 * `/NoVst3x86`       - Do not install the x86 VST3 version
 * `/NoVst3x64`       - Do not install the x64 VST3 version
 * `/NoAaxx86`        - Do not install the x86 AAX version
 * `/NoAaxx64`        - Do not install the x64 AAX version
 * `/NoShortcuts`     - Do not install shortcuts to manuals and uninstaller into start menu or onto desktop
 * `/Vst2Path:`       - Installation path of the VST2 version
 * `/Vst2x86Path:` - Installation path of the x86 VST2 version on x64 CPU architecture
 * `/InstallerPath:`  - Do not download the installer from the official Voxengo website and use the one passed with this argument instead. Use it, if you don't have an internet connection at your studio computer.
 * `/CompanyPath:`    - Path of the company to put all program files in. Override if you want to have the program files at a custom location.

You must pass the package parameters like this:
```
$VST2x86 = [System.Environment]::GetEnvironmentVariable('CommonProgramFiles(x86)') + "\VST2\Voxengo"
choco install voxengo-pha-979 --package-parameters "'/NoVst2x64 /Vst2x86Path:$VST2x86 '"
```
    </description>
    <releaseNotes>http://www.voxengo.com/press/</releaseNotes>
    <!-- =============================== -->

    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <dependencies>
      <dependency id="chocolatey-core.extension" version="1.1.0" />
    </dependencies>
    <!-- chocolatey-uninstall.extension - If supporting 0.9.9.x (or below) and including a chocolateyUninstall.ps1 file to uninstall an EXE/MSI, you probably want to include chocolatey-uninstall.extension as a dependency. Please verify whether you are using a helper function from that package. -->

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\chocolateyinstall.ps1" target="tools" />
    <file src="tools\chocolateyuninstall.ps1" target="tools" />
    <file src="tools\chocolateyfunctions.ps1" target="tools" />
    <file src="tools\chocolateyvariables.ps1" target="tools" />
    <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
  </files>
</package>
