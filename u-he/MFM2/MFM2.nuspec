<?xml version="1.0" encoding="utf-8"?>

<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if â€œÎ©â€ doesnâ€™t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>uhe-mfm2</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>2.5.1.20250912</version>
    <packageSourceUrl>https://github.com/Schroedingers-Cat/chocolatey-audio-plugins</packageSourceUrl>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>Schroedingers-Cat</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>MFM2</title>
    <authors>u-he</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://u-he.com/products/mfm2/</projectUrl>
    <iconUrl>https://rawcdn.githack.com/Schroedingers-Cat/chocolatey-audio-plugins/cea53d40c0ed5cabb4a17af985954f315bce6bea/Icons/u-he/mfm2.png</iconUrl>
    <copyright>2024 Heckmann Audio GmbH</copyright>
    <!-- If there is a license Url available, it is is required for the community feed -->
    <licenseUrl>https://u-he.com/about/eula.html</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <!--<projectSourceUrl>Software Source Location - is the software FOSS somewhere? Link to it with this</projectSourceUrl>-->
    <docsUrl>https://u-he.com/downloads/manuals/plugins/mfm2/MFM2-user-guide.pdf</docsUrl>
    <!--<mailingListUrl></mailingListUrl>-->
    <!--<bugTrackerUrl></bugTrackerUrl>-->
    <tags>u-he mfm2 more feedback machine audio clap vst vst3 aax clap effect delay admin trial</tags>
    <summary>A virtual-analog delay effect by u-he.</summary>
    <description><![CDATA[MFM2: More Feedback Machine
MFM2 is our over-the-top digital delay plug-in. You can create anything from subtle textured echos to huge spacey reverbs, from wild tonal steps on a pad to rhythmic deconstruction of a drum track. As a regular delay MFM2 already offers as much control and inspiration as possible, while the advanced features in version 2.5 open up wider horizons. More feedback, more control, more inspiration!  

## Installer Arguments
If you want to select which formats and other components to install, add `-ia '/COMPONENTS=vst3_64,clap_64,presets,nks'` as parameter. The following components can be set:

* `vst3_32` - Install the x86 (32 bit) VST3 version
* `vst3_64` - Install the x64 (64 bit) VST3 version
* `clap_64` - Install the x64 (64 bit) CLAP version
* `aax_64`  - Install the x64 (64 bit) AAX version
* `presets` - Install the presets
* `nks`     - Install the NKS integration

## Package Parameters

* `/DataPath:` - Path to the .Data directory containing the program files. Override if you want to have the program files at a custom location. Careful: u-he program files are expected to be directly writeable (no UAC involved) by the user running the software.

For example:
```powershell
choco install uhe-package --package-parameters "'/DataPath:C:\Users\Public\Documents\u-he'"
```
    ]]></description>
    <releaseNotes>https://u-he.com/products/mfm2/releasenotes.html</releaseNotes>
    <!-- =============================== -->

    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <dependencies>
      <dependency id="chocolatey-core.extension" version="1.1.0" />
    </dependencies>
    <!-- chocolatey-uninstall.extension - If supporting 0.9.9.x (or below) and including a chocolateyUninstall.ps1 file to uninstall an EXE/MSI, you probably want to include chocolatey-uninstall.extension as a dependency. Please verify whether you are using a helper function from that package. -->

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <files>
    <file src="tools\*" target="tools" />
  </files>
</package>
